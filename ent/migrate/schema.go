// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AccessColumns holds the columns for the "access" table.
	AccessColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "run", Type: field.TypeString},
		{Name: "location", Type: field.TypeEnum, Enums: []string{"102", "104", "105", "106", "107", "108"}},
		{Name: "entry_at", Type: field.TypeTime},
		{Name: "exit_at", Type: field.TypeTime, Nullable: true},
	}
	// AccessTable holds the schema information for the "access" table.
	AccessTable = &schema.Table{
		Name:       "access",
		Columns:    AccessColumns,
		PrimaryKey: []*schema.Column{AccessColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "access_run_location_entry_at",
				Unique:  true,
				Columns: []*schema.Column{AccessColumns[1], AccessColumns[2], AccessColumns[3]},
			},
		},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "run", Type: field.TypeString},
		{Name: "external_id", Type: field.TypeString, Unique: true},
		{Name: "full_name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_external_id",
				Unique:  true,
				Columns: []*schema.Column{UserColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AccessTable,
		UserTable,
	}
)

func init() {
	AccessTable.Annotation = &entsql.Annotation{
		Table: "access",
	}
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
}
